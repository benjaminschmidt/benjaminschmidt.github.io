# Generated by Django 4.0.6 on 2022-08-25 13:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('firstname', models.CharField(max_length=200)),
                ('website', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employer', models.CharField(max_length=200)),
                ('end_date', models.DateField()),
                ('start_date', models.DateField()),
                ('position', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Myself',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_description', models.TextField()),
                ('current_employer', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('general_description', models.TextField()),
                ('git', models.URLField()),
                ('linkedin', models.URLField()),
                ('name', models.CharField(max_length=200)),
                ('picture', models.ImageField(upload_to='images/')),
                ('professional_description', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Myself',
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(blank=True, max_length=200)),
                ('title', models.CharField(max_length=200)),
                ('pdf', models.FileField(upload_to='pdfs/')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Poster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.FileField(upload_to='pdfs/')),
                ('title', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(blank=True, max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('skill_level', models.CharField(choices=[('1', 'basic familiarity'), ('2', 'regular usage'), ('3', 'expert')], default='1', max_length=2)),
                ('type_of_skill', models.CharField(choices=[('LG', 'Programming language'), ('FR', 'Framework'), ('TL', 'Tool'), ('OT', 'Other skills')], default='OT', max_length=20)),
                ('years_of_experience', models.CharField(choices=[('1-', '< 1 year of experience'), ('1', '1 year of experience'), ('2', '2 years of experience'), ('3+', '3+ years of experience'), ('5+', '5+ years of experience'), ('10+', '10+ years of experience')], default='1', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='SoftwareProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic', models.BooleanField(default=False)),
                ('comment', models.CharField(max_length=200)),
                ('github', models.URLField()),
                ('last_update', models.DateField()),
                ('title', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Talk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('location', models.CharField(max_length=200)),
                ('occasion', models.CharField(max_length=200)),
                ('talk_type', models.CharField(choices=[('CT', 'Conference Talk'), ('LT', 'Local Talk'), ('ST', 'Seminar Talk')], default='LT', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='TaughtClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(max_length=200)),
                ('date', models.DateField(verbose_name='Start of semester')),
                ('institution', models.CharField(max_length=200)),
                ('semester', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Taught classes',
            },
        ),
        migrations.CreateModel(
            name='Thesis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('pdf', models.FileField(upload_to='pdfs/')),
            ],
            options={
                'verbose_name_plural': 'Theses',
            },
        ),
        migrations.CreateModel(
            name='PosterPresentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('location', models.CharField(max_length=200)),
                ('occasion', models.CharField(max_length=200)),
                ('poster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='information.poster')),
            ],
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(blank=True, max_length=200)),
                ('degree_type', models.CharField(max_length=200)),
                ('end_date', models.DateField()),
                ('start_date', models.DateField()),
                ('university', models.CharField(max_length=200)),
                ('advisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='information.author')),
                ('thesis', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='information.thesis')),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('arxiv', models.CharField(max_length=200)),
                ('journal', models.CharField(blank=True, default='', max_length=200)),
                ('pub_date', models.DateField()),
                ('comment', models.CharField(blank=True, default='', max_length=200)),
                ('pdf', models.FileField(upload_to='pdfs/')),
                ('highlight', models.BooleanField(default=False)),
                ('coauthors', models.ManyToManyField(blank=True, to='information.author')),
            ],
        ),
    ]
